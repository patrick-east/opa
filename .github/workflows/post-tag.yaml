name: Post Tag

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Push Latest Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set TAG_NAME in Environment
        # Subsequent jobs will be have the computed tag name
        run: echo ::set-env name=TAG_NAME::"${GITHUB_REF##*/}"


      - name: Build Release Binaries
        run: make release VERSION=${TAG_NAME#v}

      # Steps below assume the bins are in the root of the repo, but make
      # release places them in a versioned directory
      # TODO: Refactor make targets to get them in sync
      - name: Copy Relase Binaries
        run: cp ./_release/${OPA_VERSION}/opa_* ./

      - name: Deploy OPA Release Images
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        # TODO: Remove image org override
        #run: make deploy-travis
        run: make release-travis IMAGE_ORG=patrickeast

      - name: Create or Update Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # TODO: Move this into a script & make target
        run: |
          set -x

          TAG_NAME="${GITHUB_REF##*/}"

          # Collect a list of opa binaries (look for opa_<platform>_<arch>[extension])
          ASSETS=()
          for asset in ./opa_*_*; do
            ASSETS+=("-a" "$asset")
          done

          if [[ -z "${ASSETS[@]}" ]]; then
            echo "No release assets found!"
            exit 1
          fi

          if hub release show "${TAG_NAME}" > /dev/null; then
            # Occurs when the tag is created via GitHub UI w/ a release
            hub release edit "${ASSETS[@]}" "${TAG_NAME}"
          else
            # Create a draft release
            hub release create "${ASSETS[@]}" -m "${TAG_NAME}" --draft "${TAG_NAME}"
          fi

      - name: Save Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: OPA Binaries
          path: opa_*